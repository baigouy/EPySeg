23-24/06/2022
-fixed a big bug in predict generator (that occurred under specific conditions and only and when the tile overlap was not set to 0). It caused the output width/height to differ from the input one.
-I'm thinking of moving to PyQt6 soon (this will fix EPySeg's embedded help/markdown)
-started adding unit tests to make the code and development more robust (this is work in progress and will take a hell lot of time...)
-added support for opening image www and/or local url (for tif related images, was already working for other types of images)
-improved the invert function, should work fully as expected now (hope this did not break things, but that is unlikely)

15/06/2022
-added several new methods to the Img class (a full rewrite/reorganization would be useful some day) (e.g. save_as_tiff, one_hot_encoder, auto_scale, fill_holes, clean_blobs_below, ...)

25/04/2022
-replaced np.bool and np.float by bool and float, due to a numpy change (also reported by J. MÃ¼ller on Github)
-allowed support for python 3.8

25/01/2022
-fixed a huge bug (affecting all non square images for detection of neighbors)

24/08/2021
-added a fully functional minimal version of Tissue Analyzer to EPySeg (allows for cell tracking and cell property measurement in 2D and 3D)

03/05/2021
-added support for various tracking algorithms (not public yet...)

29/04/2021
-added support for macros to ease the use of the tool on Google Colab (not public yet...)

26/04/2021
-added a minimal user interface for users that just want to use the pre-trained models (this interface is minimal and will by default use the default/most often the optimal parameters for the models). The idea is to further simplify the tool.

12-16/04/2021
-fixed several GeneratorExit errors thanks to https://stackoverflow.com/questions/46542147/elegant-way-for-breaking-a-generator-loop-generatorexit-error
-fixed several issues with multiple input models/metagenerators (not public yet)
-changed 'Remove border pixels' in outputs so that it now pads symmetric instead of setting pixels to black...
-adding some mathematical morphology operations in tensorflow (not public yet) (I will mostly use that to create modules to simplify things)

09/04/2021
-started adding support for pytorch models (not public yet)
-added support for .lst and .txt files for file inputs (for some things I wanna do, lists are the most convenient solution, as they for example allow to select a subset of files contained in a folder)
-added support for model with several inputs (not public yet)
-added support for removing some of the extra augmentations in predict, useful for surface projection/denoising models such as CARE (This also makes prediction faster, yet less than fully removing HQ preds entirely).
-added option to limit tensorflow memory usage (may be useful to run tf and pytorch models in parallel or several instances of the tool at the same time)

26/03/2021
-Finalizing support for models with multiple inputs and outputs (work in progress, not public yet)
-Preparing a series of multiple outputs CARE derivative models trained thoroughly and where modules can be exchanged/user selected

25/03/2021
-removed 'h5py' from install_requires/setup.py (as it should anyways be installed with tensorflow). This should avoid an annoying h5py version mismatch.

22/03/2021
-Reduced GUI minimal/default size so that it can better be used on computers with small screens

23/02/2021
-Fixed a big memory leak in 'Predict'

01-20/01/2021
-version changed to 0.1.21
-Added 'Ensemble' tools (not public yet)
-Added denoising/surface projection models based on CARE (not public yet)
-Added masking tools to force the model to learn from pixel neighborhood rather than identity (not public yet)
-Working on support for ImageJ Rois/Overlays (not public yet)
-Fixed bugs and added new features to the Img class
-Added 'keep first channel only' to the post process options (useful for denoising models in order to only keep the denoised image and remove the segmentation masks because the latter often are suboptimal/low quality)
-Added a tool to preview all images of a folder and a tool to preview outputs of different models (not public yet)
-Added a tool to load and store GUI settings (not public yet)
-Modified the code so that a preview is always shown even when no model is selected (for example in the case of ensemble, where models are undefined until the last minute)
-Fixed a bug occurring when images had too many channels

15/12/2020
-Fixed a big bug in the flip data augmentation
-Added 'Shuffle along the Z axis' and 'Roll along the Z axis' data augmentation for 3D images, useful to train best focus deep learning

09/12/2020
-Added a tip text to the lineedit to explain that they handle DND for users not aware about it...
-Fixed minot bugs
-Added versions for models, allowing me to easily add new model without breaking anything for early birds
-Fixed a bug in 3D data generator

03/12/2020
-Improved the shuffle option in the datagenerator to mix between generators if multiple sets are available. 'Shuffle' is now enabled by default. 'Shuffle' was added to the training parameters of the GUI.
-Implemented random crop in datagenerator/GUI (Would need some more controls to be sure the crop is really feasible for the image, if not then return an error or increase size of the array ???, ok for now)
-Changed padding mode for datagenerator from 0 to 'reflect'

01/12/2020
-Added percentile normalisation
-Moved the normalization to happen earlier in the code (importantly, patches are now normalized using global intensity instead of local one) @myself could be a parameter in fact
-Moved image intensity 'Clip' to happen much earlier in the code
-Added 'Debug mode' in GUI settings
-Set 'remove bg noise' to 'None' by default in 'Predict' as it helps only in rare cases (has a negative impact in most cases except when images have a low membrane to cytoplasm ratio)

30/11/2020
-Fixed top hat filter for 3D images (in fact top hat does not work well for noisy images)
-Disabled bg subtraction by default in EPySeg
-Decreased minimum for image clipping/removing of outliers to 10-3% instead of 0.01%
-Changed version to 0.1.17

27/11/2020
-Fixed clip error (affecting only some dtype if the range [0,1])

26/11/2020
-Fixed a bug affecting 3D datagenerators when images had different Z dimension size

23/11/2020
-Added support for square ROI (image crop prior to training) as it allows more data augmentation
-Added manual edit of ROIs (to precisely define ROIs rather than doing it manually, i.e. more robust ROI)

19/11/2020
-Fixed a bug in retraining EPySeg model when input masks were 32 bits
-Added None to the interpolation free data augmentation to avoid under representation of the untransformed image

12-16/11/2020
-Fixed a bug when 'rotate (interpolation free)' was used as an augmentation and image had different width and height
-Fixed float32 image preview when they had negative values...
-Fixed a bug when retraining the EPySeg model (bug was linked to the nb of channels of GT)
-Replaced from skimage.morphology import watershed with from skimage.segmentation import watershed (as it will be removed in future versions)
-Added support for setting learning rate to the EPySeg GUI
-Added reduce learning rate on plateau to the EPySeg GUI
-Re-trained model will be pushed later this week or the week after
-Fixed an issue with validation data (validation dataset was not properly created)
-Enabled interpolation free data augmentation by default (check box at the bottom of data augmentation)

10/11/2020
-Fixed a big bug forcing binarisation of model predictions (the bug affects custom/user loaded models, except if it has 7 classes)
-Added support for *.lsm files (may crash if lsm contain more than one time point, same is true for tifs btw --> need do some changes in the code at some point to support time)

10/09/2020
-Reduced number of pretrained models to one (that model is globally more sensitive/precise/versatile than the other)
-Changed the mask refinement algorithm for the pretrained model
-Removed the 'post process' tab (redundant with that in the 'predict' tab)
-Greatly improved/extended documentation
-Added help buttons throughout the GUI
-Cleaned the GUI

17/07/2020
-Tensorflow-gpu is not installed by default on Mac (i.e. fixed the setup.py file)

16/07/2020
-Fixed a bug that may have filled the google drive trash bin unnecessarily

15/07/2020
-Fixed a windows specific bug due to os.rename with existing file (changed to os.replace, see https://stackoverflow.com/questions/45636341/is-it-wise-to-remove-files-using-os-rename-instead-of-os-remove-in-python)

08/07/2020
-Made the code backwards compatible with tf 2.0.0 to allow support for anaconda (https://anaconda.org/anaconda/tensorflow)
-'Refine' is now enabled by default when using a pre-trained model because it should increase output quality in most cases

16/06/2020
-First public release